Imports System
Imports System.Text.RegularExpressions
Imports System.Data.SqlClient
Public Class Empleados

    Public conexion As SqlConnection

    Private Sub Empleados_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        'TODO: esta línea de código carga datos en la tabla 'Agrocomercial_AVADataSet.Cargo' Puede moverla o quitarla según sea necesario.
        Me.CargoTableAdapter.Fill(Me.Agrocomercial_AVADataSet.Cargo)

        'TODO: esta línea de código carga datos en la tabla 'Agrocomercial_AVADataSet.Empleados' Puede moverla o quitarla según sea necesario.
        Me.EmpleadosTableAdapter.Fill(Me.Agrocomercial_AVADataSet.Empleados)

        Limpiar_Campos()
    End Sub

    'colocar color negro a los textbox
    Sub TxtColorBlack()
        Txt_Id.ForeColor = Color.Black
        Txt_Nombre.ForeColor = Color.Black
        Cmb_Sexo.ForeColor = Color.Black
        Txt_Telefono.ForeColor = Color.Black
        Txt_Correo.ForeColor = Color.Black
        Txt_Direccion.ForeColor = Color.Black
        CmbCargo.ForeColor = Color.Black
        Txt_Usuario.ForeColor = Color.Black
        Txt_Contraseña.ForeColor = Color.Black
    End Sub

    'Sub para limpiar campos
    Sub Limpiar_Campos()
        Txt_Id.Text = "Id"
        Txt_Id.ForeColor = Color.Gray
        Txt_Nombre.Text = "Nombre"
        Txt_Nombre.ForeColor = Color.Gray
        Cmb_Sexo.Text = "Seleccione el Sexo..."
        Cmb_Sexo.ForeColor = Color.Gray
        Txt_Telefono.Text = "Teléfono"
        Txt_Telefono.ForeColor = Color.Gray
        Txt_Correo.Text = "Correo"
        Txt_Correo.ForeColor = Color.Gray
        Txt_Direccion.Text = "Dirección"
        Txt_Direccion.ForeColor = Color.Gray
        CmbCargo.Text = "Seleccione el Cargo..."
        CmbCargo.ForeColor = Color.Gray
        Txt_Usuario.Text = "Usuario"
        Txt_Usuario.ForeColor = Color.Gray
        Txt_Contraseña.Text = "Contraseña"
        Txt_Contraseña.ForeColor = Color.Gray
    End Sub

    'Mensaje de campos vacios
    Sub CamposVacios(Lbl As Label)
        Lbl.Text = "        Campo Vacio"
        Lbl.Visible = True
    End Sub

    Sub OcultarLabels()
        Lbl_MsjId.Visible = False
        Lbl_MsjNombre.Visible = False
        Lbl_MsjSexo.Visible = False
        Lbl_MsjTeléfono.Visible = False
        Lbl_MsjCorreo.Visible = False
        Lbl_MsjCargo.Visible = False
        Lbl_MsjDireccion.Visible = False
        Lbl_MsjUsuario.Visible = False
        Lbl_MsjContraseña.Visible = False
    End Sub

    'Activar Contorno de los textbox rojo
    Sub ValidarOnHigh()
        Validación.SetHighlightColor(Txt_Id, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(Txt_Nombre, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(Cmb_Sexo, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(Txt_Telefono, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(Txt_Correo, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(Txt_Direccion, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(CmbCargo, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(Txt_Usuario, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
        Validación.SetHighlightColor(Txt_Contraseña, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
    End Sub
    Sub ValidarOffHigh()
        Validación.SetHighlightColor(Txt_Id, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(Txt_Nombre, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(Cmb_Sexo, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(Txt_Telefono, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(Txt_Correo, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(Txt_Direccion, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(CmbCargo, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(Txt_Usuario, DevComponents.DotNetBar.Validator.eHighlightColor.None)
        Validación.SetHighlightColor(Txt_Contraseña, DevComponents.DotNetBar.Validator.eHighlightColor.None)
    End Sub



    Private Sub Btn_Borrar_Click(sender As Object, e As EventArgs) Handles Btn_Borrar.Click
        conexion = New SqlConnection("Data Source=DESKTOP-18G5VAI\SQLEXPRESS ;Initial Catalog=Agrocomercial AVA ;Integrated Security=True")
        conexion.Open()
        Dim comando As String = "select * from Empleados Where Id_Empleado = '" & Txt_Id.Text & "'"
        Dim da As New SqlDataAdapter
        Dim dt As New DataTable
        da = New SqlDataAdapter(comando, conexion)
        da.Fill(dt)

        If Txt_Id.Text = "Id" Then
            MsgBox("por favor llene el campo Id_Empleado")
        Else
            If dt.Rows.Count <> 0 Then
                Me.EmpleadosTableAdapter.Borrar_Empleado(Txt_Id.Text)
                Me.EmpleadosTableAdapter.Fill(Me.Agrocomercial_AVADataSet.Empleados)
                MsgBox("Se ha eliminado el empleado con exito", vbInformation, "Correcto")
                Limpiar_Campos()
            Else
                MsgBox("El Empleado no existe")

            End If

        End If


    End Sub

    Sub ValCamposVacios(Txt1)

    End Sub
    Private Sub Btn_Actualizar_Click(sender As Object, e As EventArgs) Handles Btn_Actualizar.Click
        conexion = New SqlConnection("Data Source=DESKTOP-18G5VAI\SQLEXPRESS ;Initial Catalog=Agrocomercial AVA ;Integrated Security=True")
        conexion.Open()
        Dim comando As String = "select * from Empleados Where Id_Empleado = '" & Txt_Id.Text & "'"
        Dim da As New SqlDataAdapter
        Dim dt As New DataTable
        da = New SqlDataAdapter(comando, conexion)
        da.Fill(dt)

        Dim IdCargo As Integer
        If CmbCargo.Text = "Administrador" Then
            IdCargo = 1
        ElseIf CmbCargo.Text = "Jefe de inventario" Then
            IdCargo = 2
        ElseIf CmbCargo.Text = "Cajero" Then
            IdCargo = 3
        End If

        If Txt_Id.Text = "Id" And Txt_Nombre.Text = "Nombre" And Cmb_Sexo.Text = "Seleccione el Sexo..." And Txt_Telefono.Text = "Teléfono" And Txt_Correo.Text = "Correo" And Txt_Direccion.Text = "Dirección" And CmbCargo.Text = "Seleccione el Cargo..." And Txt_Usuario.Text = "Usuario" And Txt_Contraseña.Text = "Contraseña" Then
            MsgBox("por favor llene todos los campos")
        ElseIf Txt_Id.Text = "Id" And Txt_Nombre.Text = "Nombre" And Cmb_Sexo.Text = "Seleccione el Sexo..." And Txt_Telefono.Text = "Teléfono" And Txt_Correo.Text = "Correo" And Txt_Direccion.Text = "Dirección" And CmbCargo.Text = "Seleccione el Cargo..." And Txt_Usuario.Text = "Usuario" And Txt_Contraseña.Text = "Contraseña" Then
            MsgBox("por favor llene todos los campos")
        Else
            If dt.Rows.Count <> 0 Then
                Me.EmpleadosTableAdapter.Actualizar_Empleado(Txt_Id.Text, Txt_Nombre.Text, Cmb_Sexo.Text, Txt_Telefono.Text, Txt_Correo.Text, Txt_Direccion.Text, DTP_FechaContra.Value, IdCargo, Txt_Usuario.Text, Txt_Contraseña.Text, Txt_Id.Text, CmbCargo.Text)
                Me.EmpleadosTableAdapter.Fill(Me.Agrocomercial_AVADataSet.Empleados)
                MsgBox("Se ha actualizado el empleado con exito", vbInformation, "Correcto")
                Limpiar_Campos()
            Else
                MsgBox("El Empleado no existe")

            End If
        End If
    End Sub


    Private Sub Btn_Buscar_Click(sender As Object, e As EventArgs) Handles Btn_Buscar.Click
        conexion = New SqlConnection("Data Source=DESKTOP-18G5VAI\SQLEXPRESS ;Initial Catalog=Agrocomercial AVA ;Integrated Security=True")
        conexion.Open()
        Dim comando As String = "select * from Empleados Where Id_Empleado = '" & Txt_Id.Text & "'"
        Dim da As New SqlDataAdapter
        Dim dt As New DataTable
        da = New SqlDataAdapter(comando, conexion)
        da.Fill(dt)
        If Txt_Id.Text = "Id" Then
            MsgBox("Ingrese el Id del Empleado")

        End If
        If IsNumeric(Txt_Id.Text) Then

            Try
                If dt.Rows.Count <> 0 Then
                    Me.EmpleadosTableAdapter.Buscar_Empleado(Me.Agrocomercial_AVADataSet.Empleados, Txt_Id.Text)
                Else
                    MsgBox("El Empleado no existe")
                End If
            Catch ex As Exception

            End Try
        End If
    End Sub


    Private Sub Txt_Id_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Txt_Id.KeyPress
        SoloNumeros(e)

        Txt_Id.MaxLength = 13
        If Txt_Id.TextLength >= 13 Then
            MsgBox("El id no puede contener mas de 13 digitos")
        End If

    End Sub

    Private Sub Txt_Nombre_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Txt_Nombre.KeyPress
        SoloLetras(e)
    End Sub

    Private Sub Txt_Telefono_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Txt_Telefono.KeyPress
        SoloNumeros(e)
        If Txt_Telefono.Text = "Teléfono" Then
            Txt_Telefono.MaxLength = 9
        Else
            Txt_Telefono.MaxLength = 8
            If Txt_Telefono.TextLength >= 8 Then
                MsgBox("Limite de caracteres alcanzado")
            End If
        End If

    End Sub



    Private Sub EmpleadosDataGridView_Click(sender As Object, e As EventArgs) Handles EmpleadosDataGridView.Click
        'Pasa los datos del datagridview a los textbox'
        Txt_Id.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(0).Value.ToString
        Txt_Nombre.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(1).Value.ToString
        Cmb_Sexo.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(2).Value.ToString
        Txt_Telefono.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(3).Value.ToString
        Txt_Correo.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(4).Value.ToString
        Txt_Direccion.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(5).Value.ToString
        DTP_FechaContra.Value = EmpleadosDataGridView.CurrentRow.Cells.Item(6).Value.ToString
        CmbCargo.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(7).Value.ToString
        Txt_Usuario.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(8).Value.ToString
        Txt_Contraseña.Text = EmpleadosDataGridView.CurrentRow.Cells.Item(9).Value.ToString
        TxtColorBlack()
        OcultarLabels()
        ValidarOffHigh()
    End Sub

    Private Sub Cmb_Sexo_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Cmb_Sexo.KeyPress
        InhCombobox(e)
    End Sub

    Private Sub CmbCargo_KeyPress(sender As Object, e As KeyPressEventArgs) Handles CmbCargo.KeyPress
        InhCombobox(e)
    End Sub
    Private Sub Txt_Direccion_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Txt_Direccion.KeyPress
        Txt_Direccion.MaxLength = 100
        If Txt_Direccion.TextLength >= 100 Then
            MsgBox("Ha Alcanzado el limite de caracteres")

        Else
            ValDireccion(e, Txt_Direccion)
        End If

    End Sub

    Private Sub Txt_Id_Leave(sender As Object, e As EventArgs) Handles Txt_Id.Leave
        Txt_Direccion.MaxLength = 13

        If Txt_Id.Text = "Id" Then
            Validación.SetHighlightColor(Txt_Id, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjId)
        ElseIf Txt_Id.TextLength <> 13 Then
            'MsgBox("El id del Empleado debe contener 13 digitos")
            Validación.SetHighlightColor(Txt_Id, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            Lbl_MsjId.Text = "        El id del Empleado debe contener 13 digitos"
            Lbl_MsjId.Visible = True
            Txt_Id.Text = "Id"
            Txt_Id.ForeColor = Color.Gray

        Else
            Validación.SetHighlightColor(Txt_Id, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjId.Visible = False
        End If
    End Sub

    Private Sub Txt_Nombre_Leave(sender As Object, e As EventArgs) Handles Txt_Nombre.Leave
        If Txt_Nombre.Text = "Nombre" Then
            Validación.SetHighlightColor(Txt_Nombre, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjNombre)
        Else
            Validación.SetHighlightColor(Txt_Nombre, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjNombre.Visible = False
            NombreEmpleados(Txt_Nombre)
            Espacios(Txt_Nombre)
        End If
    End Sub

    Private Sub Txt_Telefono_Leave(sender As Object, e As EventArgs) Handles Txt_Telefono.Leave
        Txt_Telefono.MaxLength = 8


        If Txt_Telefono.Text = "Teléfono" Then
            Validación.SetHighlightColor(Txt_Telefono, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjTeléfono)
        Else
            If Txt_Telefono.TextLength <> 8 Then
                Validación.SetHighlightColor(Txt_Telefono, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
                Lbl_MsjTeléfono.Text = "     El número debe contener 8 digitos "
                Lbl_MsjTeléfono.Visible = True
                Txt_Telefono.Clear()
            Else
                Validación.SetHighlightColor(Txt_Telefono, DevComponents.DotNetBar.Validator.eHighlightColor.None)
                Lbl_MsjTeléfono.Visible = False
                TelefonoEmpleados(Txt_Telefono)
            End If

        End If


        If Txt_Telefono.Text <> "Teléfono" Then
            If Txt_Telefono.Text.FirstOrDefault() <> "2" And Txt_Telefono.Text.FirstOrDefault() <> "9" And Txt_Telefono.Text.FirstOrDefault() <> "3" And Txt_Telefono.Text.FirstOrDefault() <> "8" Then
                MsgBox("El numero que ingreso no es valido en honduras, los numeros validos son: 2, 3, 8 y 9", vbExclamation)
                Txt_Telefono.Clear()
            End If
        End If

    End Sub
    Private Sub Txt_Usuario_Leave(sender As Object, e As EventArgs) Handles Txt_Usuario.Leave
        If Txt_Usuario.Text = "Usuario" Then
            Validación.SetHighlightColor(Txt_Usuario, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjUsuario)
        Else
            Validación.SetHighlightColor(Txt_Usuario, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjUsuario.Visible = False
            UsuarioEmpleados(Txt_Usuario)
        End If
    End Sub
    Private Sub Txt_Usuario_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Txt_Usuario.KeyPress
        ValUsuario(e)
    End Sub

    Private Sub Btn_Limpiar_Click(sender As Object, e As EventArgs) Handles Btn_Limpiar.Click
        Limpiar_Campos()
    End Sub

    Private Sub Txt_Correo_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Txt_Correo.KeyPress
        ValCorreo(e)

    End Sub




    'ESTILO DEL PLACEHOLDER DE ID EMPLEADO
    Private Sub Txt_Id_TextChanged(sender As Object, e As EventArgs) Handles Txt_Id.TextChanged
        With Txt_Id
            If .Text = "" Then
                .Text = "Id"
                .ForeColor = Color.Gray
            End If

            If .TextLength > 2 Then
                If StrReverse(StrReverse(.Text).Remove(2)) = "Id" Then
                    .Text = .Text.Remove(.TextLength - 2)
                    .ForeColor = Color.Black
                    .SelectionStart = .TextLength
                    .ScrollToCaret()
                End If
            End If
        End With
    End Sub

    Private Sub Txt_Id_MouseDown(sender As Object, e As MouseEventArgs) Handles Txt_Id.MouseDown
        With Txt_Id
            If .Text = "Id" And .ForeColor = Color.Gray Then
                .SelectionStart = .TextLength
                .SelectionLength = 0
                .SelectionStart = 0
                .ScrollToCaret()
            End If
        End With
    End Sub

    Private Sub Txt_Id_MouseMove(sender As Object, e As MouseEventArgs) Handles Txt_Id.MouseMove
        With Txt_Id
            If .Text = "Id" And .ForeColor = Color.Gray Then
                Txt_Id.Select(0, 0)
            End If
        End With
    End Sub





    'ESTILO DEL PLACEHOLDER DE Nombre
    Private Sub Txt_Nombre_TextChanged(sender As Object, e As EventArgs) Handles Txt_Nombre.TextChanged
        With Txt_Nombre
            If Txt_Nombre.Text = "" Then
                .Text = "Nombre"
                .ForeColor = Color.Gray
            End If


            If .TextLength > 6 Then
                If StrReverse(StrReverse(.Text).Remove(6)) = "Nombre" Then
                    .Text = .Text.Remove(.TextLength - 6)
                    .ForeColor = Color.Black
                    .SelectionStart = .TextLength
                    .ScrollToCaret()
                End If
            End If
        End With
    End Sub
    Private Sub Txt_Nombre_MouseDown(sender As Object, e As MouseEventArgs) Handles Txt_Nombre.MouseDown
        With Txt_Nombre
            If .Text = "Nombre" And .ForeColor = Color.Gray Then
                .SelectionStart = .TextLength
                .SelectionLength = 0
                .SelectionStart = 0
                .ScrollToCaret()
            End If
        End With
    End Sub
    Private Sub Txt_Nombre_MouseMove(sender As Object, e As MouseEventArgs) Handles Txt_Nombre.MouseMove
        With Txt_Nombre
            If .Text = "Nombre" And .ForeColor = Color.Gray Then
                Txt_Nombre.Select(0, 0)
            End If
        End With
    End Sub



    'ESTILO DEL PLACEHOLDER DEl Teléfono
    Private Sub Txt_Telefono_TextChanged(sender As Object, e As EventArgs) Handles Txt_Telefono.TextChanged
        With Txt_Telefono
            If Txt_Telefono.Text = "" Then
                .Text = "Teléfono"
                .ForeColor = Color.Gray
            End If

            If .TextLength > 8 Then
                    If StrReverse(StrReverse(.Text).Remove(8)) = "Teléfono" Then
                        .Text = .Text.Remove(.TextLength - 8)
                        .ForeColor = Color.Black
                        .SelectionStart = .TextLength
                        .ScrollToCaret()
                    End If
                End If

        End With
    End Sub
    Private Sub Txt_Telefono_MouseDown(sender As Object, e As MouseEventArgs) Handles Txt_Telefono.MouseDown
        With Txt_Telefono
            If .Text = "Teléfono" And .ForeColor = Color.Gray Then
                .SelectionStart = .TextLength
                .SelectionLength = 0
                .SelectionStart = 0
                .ScrollToCaret()
            End If
        End With
    End Sub
    Private Sub Txt_Telefono_MouseMove(sender As Object, e As MouseEventArgs) Handles Txt_Telefono.MouseMove
        With Txt_Telefono
            If .Text = "Teléfono" And .ForeColor = Color.Gray Then
                Txt_Telefono.Select(0, 0)
            End If
        End With
    End Sub



    'ESTILO DEL PLACEHOLDER DE  Correo
    Private Sub Txt_Correo_TextChanged(sender As Object, e As EventArgs) Handles Txt_Correo.TextChanged
        With Txt_Correo
            If Txt_Correo.Text = "" Then
                .Text = "Correo"
                .ForeColor = Color.Gray
            End If

            If .TextLength > 6 Then
                If StrReverse(StrReverse(.Text).Remove(6)) = "Correo" Then
                    .Text = .Text.Remove(.TextLength - 6)
                    .ForeColor = Color.Black
                    .SelectionStart = .TextLength
                    .ScrollToCaret()
                End If
            End If
        End With
    End Sub
    Private Sub Txt_Correo_MouseDown(sender As Object, e As MouseEventArgs) Handles Txt_Correo.MouseDown
        With Txt_Correo
            If .Text = "Correo" And .ForeColor = Color.Gray Then
                .SelectionStart = .TextLength
                .SelectionLength = 0
                .SelectionStart = 0
                .ScrollToCaret()
            End If
        End With
    End Sub
    Private Sub Txt_Correo_MouseMove(sender As Object, e As MouseEventArgs) Handles Txt_Correo.MouseMove
        With Txt_Correo
            If .Text = "Correo" And .ForeColor = Color.Gray Then
                Txt_Correo.Select(0, 0)
            End If
        End With
    End Sub



    'ESTILO DEL PLACEHOLDER DE Dirección
    Private Sub Txt_Direccion_TextChanged(sender As Object, e As EventArgs) Handles Txt_Direccion.TextChanged
        With Txt_Direccion
            If Txt_Direccion.Text = "" Then
                .Text = "Dirección"
                .ForeColor = Color.Gray
            End If

            If .TextLength > 9 Then
                If StrReverse(StrReverse(.Text).Remove(9)) = "Dirección" Then
                    .Text = .Text.Remove(.TextLength - 9)
                    .ForeColor = Color.Black
                    .SelectionStart = .TextLength
                    .ScrollToCaret()
                End If
            End If
        End With
    End Sub
    Private Sub Txt_Direccion_MouseDown(sender As Object, e As MouseEventArgs) Handles Txt_Direccion.MouseDown
        With Txt_Direccion
            If .Text = "Dirección" And .ForeColor = Color.Gray Then
                .SelectionStart = .TextLength
                .SelectionLength = 0
                .SelectionStart = 0
                .ScrollToCaret()
            End If
        End With
    End Sub
    Private Sub Txt_Direccion_MouseMove(sender As Object, e As MouseEventArgs) Handles Txt_Direccion.MouseMove
        With Txt_Direccion
            If .Text = "Dirección" And .ForeColor = Color.Gray Then
                Txt_Direccion.Select(0, 0)
            End If
        End With
    End Sub



    'ESTILO DEL PLACEHOLDER DE Usuario
    Private Sub Txt_Usuario_TextChanged(sender As Object, e As EventArgs) Handles Txt_Usuario.TextChanged
        With Txt_Usuario
            If Txt_Usuario.Text = "" Then
                .Text = "Usuario"
                .ForeColor = Color.Gray
            End If

            If .TextLength > 7 Then
                If StrReverse(StrReverse(.Text).Remove(7)) = "Usuario" Then
                    .Text = .Text.Remove(.TextLength - 7)
                    .ForeColor = Color.Black
                    .SelectionStart = .TextLength
                    .ScrollToCaret()
                End If
            End If
        End With
    End Sub
    Private Sub Txt_Usuario_MouseDown(sender As Object, e As MouseEventArgs) Handles Txt_Usuario.MouseDown
        With Txt_Usuario
            If .Text = "Usuario" And .ForeColor = Color.Gray Then
                .SelectionStart = .TextLength
                .SelectionLength = 0
                .SelectionStart = 0
                .ScrollToCaret()
            End If
        End With
    End Sub
    Private Sub Txt_Usuario_MouseMove(sender As Object, e As MouseEventArgs) Handles Txt_Usuario.MouseMove
        With Txt_Usuario
            If .Text = "Usuario" And .ForeColor = Color.Gray Then
                Txt_Usuario.Select(0, 0)
            End If
        End With
    End Sub


    'ESTILO DEL PLACEHOLDER DE Contraseña
    Private Sub Txt_Contraseña_TextChanged(sender As Object, e As EventArgs) Handles Txt_Contraseña.TextChanged
        With Txt_Contraseña
            If Txt_Contraseña.Text = "" Then
                .Text = "Contraseña"
                .ForeColor = Color.Gray
            End If

            If .TextLength > 10 Then
                If StrReverse(StrReverse(.Text).Remove(10)) = "Contraseña" Then
                    .Text = .Text.Remove(.TextLength - 10)
                    .ForeColor = Color.Black
                    .SelectionStart = .TextLength
                    .ScrollToCaret()
                End If
            End If
        End With
    End Sub
    Private Sub Txt_Contraseña_MouseDown(sender As Object, e As MouseEventArgs) Handles Txt_Contraseña.MouseDown
        With Txt_Contraseña
            If .Text = "Contraseña" And .ForeColor = Color.Gray Then
                .SelectionStart = .TextLength
                .SelectionLength = 0
                .SelectionStart = 0
                .ScrollToCaret()
            End If
        End With
    End Sub
    Private Sub Txt_Contraseña_MouseMove(sender As Object, e As MouseEventArgs) Handles Txt_Contraseña.MouseMove
        With Txt_Contraseña
            If .Text = "Contraseña" And .ForeColor = Color.Gray Then
                Txt_Contraseña.Select(0, 0)
            End If
        End With
    End Sub

    Private Sub Btn_Agregar_Click(sender As Object, e As EventArgs) Handles Btn_Agregar.Click
        Dim IdCargo As Integer
        If CmbCargo.Text = "Administrador" Then
            IdCargo = 1
        ElseIf CmbCargo.Text = "Jefe de inventario" Then
            IdCargo = 2
        ElseIf CmbCargo.Text = "Cajero" Then
            IdCargo = 3
        End If


        If Txt_Id.Text = "Id" And Txt_Nombre.Text = "Nombre" And Cmb_Sexo.Text = "Seleccione el Sexo..." And Txt_Telefono.Text = "Teléfono" And Txt_Correo.Text = "Correo" And Txt_Direccion.Text = "Dirección" And CmbCargo.Text = "Seleccione el Cargo..." And Txt_Usuario.Text = "Usuario" And Txt_Contraseña.Text = "Contraseña" Then
            MsgBox("No se permiten campos vacios", MsgBoxStyle.Critical, "Error")
            'se mostrara el highlighter en los textbox 
            ValidarOnHigh()
            CamposVacios(Lbl_MsjId)
            CamposVacios(Lbl_MsjNombre)
            CamposVacios(Lbl_MsjSexo)
            CamposVacios(Lbl_MsjTeléfono)
            CamposVacios(Lbl_MsjCorreo)
            CamposVacios(Lbl_MsjDireccion)
            CamposVacios(Lbl_MsjCargo)
            CamposVacios(Lbl_MsjUsuario)
            CamposVacios(Lbl_MsjContraseña)
        ElseIf Txt_Id.Text = "Id" Or Txt_Nombre.Text = "Nombre" Or Cmb_Sexo.Text = "Seleccione el Sexo..." Or Txt_Telefono.Text = "Teléfono" Or Txt_Correo.Text = "Correo" Or Txt_Direccion.Text = "Dirección" Or CmbCargo.Text = "Seleccione el Cargo..." Or Txt_Usuario.Text = "Usuario" Or Txt_Contraseña.Text = "Contraseña" Then
            MsgBox("No se permiten campos vacios", MsgBoxStyle.Critical, "Error")

        Else
            conexion = New SqlConnection("Data Source=DESKTOP-18G5VAI\SQLEXPRESS ;Initial Catalog=Agrocomercial AVA ;Integrated Security=True")
            conexion.Open()

            'Asignamos los valores de la base de datos al textbox.
            Dim comando As String = "Select * from Empleados where Id_Empleado = '" & Txt_Id.Text & "'"
            Dim da As New SqlDataAdapter
            Dim dt As New DataTable
            da = New SqlDataAdapter(comando, conexion)
            da.Fill(dt)



            If dt.Rows.Count <> 0 Then
                MsgBox("Este Id ya se encuentra registrado")
                Txt_Id.Clear()
                Txt_Id.Focus()
            Else
                Me.EmpleadosTableAdapter.Insertar_Empleado(Txt_Id.Text, Txt_Nombre.Text, Cmb_Sexo.Text, Txt_Telefono.Text, Txt_Correo.Text, Txt_Direccion.Text, DTP_FechaContra.Value, IdCargo, Txt_Usuario.Text, Txt_Contraseña.Text, CmbCargo.Text)
                Me.EmpleadosTableAdapter.Fill(Me.Agrocomercial_AVADataSet.Empleados)
                MsgBox("Se ha agregado el empleado con exito", MsgBoxStyle.Exclamation, "Correcto")
            End If


        End If
    End Sub

    Private Sub Btn_Mostrar_Click(sender As Object, e As EventArgs) Handles Btn_Mostrar.Click
        Me.EmpleadosTableAdapter.Fill(Me.Agrocomercial_AVADataSet.Empleados)
    End Sub

    Private Sub Txt_Direccion_Leave(sender As Object, e As EventArgs) Handles Txt_Direccion.Leave

        If Txt_Direccion.Text = "Dirección" Then
            Validación.SetHighlightColor(Txt_Direccion, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjDireccion)
        Else
            Espacios(Txt_Direccion)
            Validación.SetHighlightColor(Txt_Direccion, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjDireccion.Visible = False
        End If
    End Sub
    Private Sub Txt_Contraseña_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Txt_Contraseña.KeyPress
        ValContraseñas(e)
    End Sub

    Private Sub Txt_Correo_Leave(sender As Object, e As EventArgs) Handles Txt_Correo.Leave


        If Txt_Correo.Text = "Correo" Then
            Validación.SetHighlightColor(Txt_Correo, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjCorreo)
        Else
            correoval(Txt_Correo.Text, Txt_Correo)
            Validación.SetHighlightColor(Txt_Correo, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjCorreo.Visible = False
        End If
    End Sub

    Private Sub Cmb_Sexo_Leave(sender As Object, e As EventArgs) Handles Cmb_Sexo.Leave
        If Cmb_Sexo.Text = "Seleccione el Sexo..." Then
            Validación.SetHighlightColor(Cmb_Sexo, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjSexo)
        Else
            Validación.SetHighlightColor(Cmb_Sexo, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjSexo.Visible = False
        End If
    End Sub

    Private Sub CmbCargo_Leave(sender As Object, e As EventArgs) Handles CmbCargo.Leave
        If CmbCargo.Text = "Seleccione el Cargo..." Then
            Validación.SetHighlightColor(CmbCargo, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjCargo)
        Else
            Validación.SetHighlightColor(CmbCargo, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjCargo.Visible = False
        End If
    End Sub

    Private Sub Txt_Contraseña_Leave(sender As Object, e As EventArgs) Handles Txt_Contraseña.Leave
        If Txt_Contraseña.Text = "Contraseña" Then
            Validación.SetHighlightColor(Txt_Contraseña, DevComponents.DotNetBar.Validator.eHighlightColor.Red)
            CamposVacios(Lbl_MsjContraseña)
        Else
            Validación.SetHighlightColor(Txt_Contraseña, DevComponents.DotNetBar.Validator.eHighlightColor.None)
            Lbl_MsjContraseña.Visible = False
        End If
    End Sub

End Class
